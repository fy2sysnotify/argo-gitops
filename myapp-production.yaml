apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: myapp
    environment: production
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
  name: myapp-production
  namespace: myapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
      tier: production
  strategy:
    type: RollingUpdate
    rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: myapp
        tier: production
    spec:
      containers:
      - image: liquidreply/argocd-example-app:1
        name: myapp
        resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
                cpu: "500m"
                memory: "512Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5

status: {}